import e from"../core/Interactable.min.js";import{Interaction as t}from"../core/Interaction.min.js";import*as o from"../utils/arr.min.js";import n from"../utils/extend.min.js";import r from"../utils/is.min.js";import*as i from"../utils/pointerUtils.min.js";import{tlbrToXywh as s}from"../utils/rect.min.js";export function install(e){const{Interactable:t}=e;e.actions.phases.reflow=!0,t.prototype.reflow=function(t){return function(e,t,n){const a=r.string(e.target)?o.from(e._context.querySelectorAll(e.target)):[e.target],m=n.window.Promise,c=m?[]:null;for(const r of a){const a=e.getRect(r);if(!a)break;const p=o.find(n.interactions.list,o=>o.interacting()&&o.interactable===e&&o.element===r&&o.prepared.name===t.name);let f;if(p)p.move(),c&&(f=p._reflowPromise||new m(e=>{p._reflowResolve=e}));else{const o=s(a),m={page:{x:o.x,y:o.y},client:{x:o.x,y:o.y},timeStamp:n.now()},c=i.coordsToEvent(m);f=l(n,e,r,t,c)}c&&c.push(f)}return c&&m.all(c).then(()=>e)}(this,t,e)}}function l(e,t,o,r,i){const s=e.interactions.new({pointerType:"reflow"}),l={interaction:s,event:i,pointer:i,eventTarget:o,phase:"reflow"};s.interactable=t,s.element=o,s.prepared=n({},r),s.prevEvent=i,s.updatePointer(i,i,o,!0),s._doPhase(l);const a=e.window.Promise,m=a?new a(e=>{s._reflowResolve=e}):null;return s._reflowPromise=m,s.start(r,t,o),s._interacting?(s.move(l),s.end(i)):s.stop(),s.removePointer(i,i),s.pointerIsDown=!1,m}export default{id:"reflow",install:install,listeners:{"interactions:stop"({interaction:e},t){"reflow"===e.pointerType&&(e._reflowResolve&&e._reflowResolve(),o.remove(t.interactions.list,e))}}};
//# sourceMappingURL=plugin.min.js.map